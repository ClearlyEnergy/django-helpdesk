# Generated by Django 3.2.18 on 2023-07-19 18:02

from django.db import migrations
from seed.lib.superperms.orgs.models import get_helpdesk_organizations


def importers_to_queues(apps, schema_editor):
    IgnoreEmail = apps.get_model('helpdesk', 'IgnoreEmail')
    for ignored in IgnoreEmail.objects.filter(importers__isnull=False):
        for importer in ignored.importers.all():
            queues = importer.queue_set.all()
            ignored.queues.set(queues)
            if importer.default_queue:
                ignored.queues.add(importer.default_queue)


def queues_to_importers(apps, schema_editor):
    # We want to include every importer connected to the ignored address's queues. This includes:
    #   - If the queue is a default_queue for an importer
    #   - The queue's selected importer
    # If the address has no queues selected, we'll use the organization and look for:
    #   - All queues in the organization that are default queues for an importer
    #   - All queues in the organization, and their selected importers

    IgnoreEmail = apps.get_model('helpdesk', 'IgnoreEmail')
    EmailImporter = apps.get_model('seed', 'EmailImporter')

    for ignored in IgnoreEmail.objects.filter(queues__isnull=False):
        importers_with_defaults = EmailImporter.objects.filter(default_queue__in=ignored.queues.all())
        ignored.importers.set(importers_with_defaults)
        for queue in ignored.queues.all():
            if queue.importer:
                ignored.importers.add(queue.importer)
                if queue.importer.default_queue \
                        and queue.importer.default_queue.organization == ignored.organization \
                        and queue.importer.default_queue.importer:
                    ignored.importers.add(queue.importer.default_queue.importer)

    for ignored in IgnoreEmail.objects.filter(queues__isnull=True):
        org_queues = ignored.organization.queue_set.all()
        importers_with_defaults = EmailImporter.objects.filter(default_queue__in=org_queues)
        ignored.importers.set(importers_with_defaults)
        for queue in org_queues.filter(importer__isnull=False):
            ignored.importers.add(queue.importer)
            if queue.importer.default_queue \
                    and queue.importer.default_queue.organization == ignored.organization \
                    and queue.importer.default_queue.importer:
                ignored.importers.add(queue.importer.default_queue.importer)


def add_org(apps, schema_editor):
    # Finds an organization for the ignored address, based on the queue; importer; or orgs on the site.
    # Otherwise, just delete it.
    IgnoreEmail = apps.get_model('helpdesk', 'IgnoreEmail')
    for ignored in IgnoreEmail.objects.all():
        organization = None
        queue = ignored.queues.first()
        if queue:
            organization = queue.organization.helpdesk_organization
        else:
            importer = ignored.importers.first()
            if importer and importer.default_queue:
                organization = importer.default_queue.organization.helpdesk_organization
            elif importer and importer.sender:
                organization = importer.sender.organization__set.first().helpdesk_organization
            else:
                orgs = get_helpdesk_organizations()
                if orgs.count() == 1:
                    organization = orgs.first()
        if organization:
            ignored.organization = organization
            ignored.save()
        else:
            ignored.delete()

    # clean up the queues by deleting those not in the current organization
    for ignored in IgnoreEmail.objects.all():
        org_queues = ignored.queues.filter(organization=ignored.organization)
        ignored.queues.set(org_queues)


def add_modified_date(apps, schema_editor):
    IgnoreEmail = apps.get_model('helpdesk', 'IgnoreEmail')
    for ignored in IgnoreEmail.objects.all():
        ignored.modified = ignored.date
        ignored.save()


class Migration(migrations.Migration):

    dependencies = [
        ('helpdesk', '0088_alter_ignoreemail'),
    ]

    operations = [
        migrations.RunPython(importers_to_queues, queues_to_importers),
        migrations.RunPython(add_org, migrations.RunPython.noop),
        migrations.RunPython(add_modified_date, migrations.RunPython.noop)
    ]
